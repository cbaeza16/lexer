package com.p1;

import java_cup.runtime.*;
import java.lang.*;


action code {:

    public void hola(){
        System.out.println("Hola");
    }
    public void adios(){
            System.out.println("Adios");
        }

:}

parser code {:
    Lexer lex;

    @SuppressWarnings("deprecation")
    public parser(Lexer lex){
        this.lex=lex;
        this.symbolFactory = new DefaultSymbolFactory();
    }
:}

init with {: :};
scan with {: return lex.next_token(); :};

//-----Simbolos terminales navideños------

//Operadores aritmeticos bianrios
terminal RODOLFO, TURENO, COMETA, DASHER, DANCER, PRANCER;
//Operadores aritmeticos unarios
terminal QUIEN, GRINCH;
//Operadores relacionales
terminal SNOWBALL, BUSHY, PEPPER, SUGARPLUM, SHINNY, WUNORSE;
//Operadores logicos
terminal MELCHOR, GASPAR, BALTAZAR;
//Identificador
terminal PERSONA;
//Tipos
terminal FATHER_CHRISTMAS, SANTA_CLAUS, PAPA_NOEL, SAN_NICOLAS, SANTA;
//Literales
terminal l_FFATHER_CHRISTMAS, l_TFATHER_CHRISTMAS, l_SANTA_CLAUS, l_PAPA_NOEL, l_SAN_NICOLAS, l_SANTA;
//Parentesis
terminal ABRECUENTO, CIERRACUENTO, ABREEMPAQUE, CIERRAEMPAQUE, ABREREGALO, CIERRAREGALO;
//Palabras reservadas
terminal MAIN, LOCAL, FUNCTION;
//Estructuras de control
terminal ELFO, HADA, DUENDE, ENVUELVE, HACE, REVISA, ENVIA, CORTA, ENTREGA, BASTON; 
//Print, Read
terminal NARRA, ESCUCHA;
//Final de expresión
terminal FINREGALO;


//-----Simbolos no terminales navideños------
non terminal tsantaclaus, tlsantaclaus;
non terminal navidad, mainNavidad, bolsanavidena, bolsanavidenaAux, listaDeRegalos, listaDeRegalosAux, villancicos, adorno,
listaDeTamalesAux, listaDeTamales, llamadaASanta, listaAmigos, acceso_trineo, llenar_trineo, colocar_trineo, SantaArreglo, trineo, infoTrineo, 
decorarGalleta, ponerLuces, if, elif, else, do_until, for, luces, leerCarta, escribirCarta, mensaje, ornamentosUnicos, decoracionesI, 
decoracionesF, decoracion, decoracionIAux, decoracionI, decoracionF, ornamentos, CindyLuWho, whoVille, DonnaWho, SantaMate, workshop, 
yellowSnow, sugar, candy, candyCane, candyBox, gingerBread, adornoAux, naughtyOrNice;

start with navidad;

//Programa Simbolo inicial = navidad (puede correr funcion principal)
navidad ::= mainNavidad|
        bolsanavidena mainNavidad;

//Funcion Main
mainNavidad ::= FUNCTION MAIN ABRECUENTO CIERRACUENTO ABREREGALO villancicos CIERRAREGALO ;

//Creacion de funciones con palabra resevada "function" tipo identificador (parametros) {cuerpo}

bolsanavidenaAux ::= FUNCTION tsantaclaus PERSONA ABRECUENTO CIERRACUENTO ABREREGALO villancicos CIERRAREGALO
    | FUNCTION tsantaclaus PERSONA ABRECUENTO listaDeRegalos CIERRACUENTO ABREREGALO villancicos CIERRAREGALO  ;

//Creacion de una o varias funciones
bolsanavidena ::= bolsanavidenaAux | bolsanavidena bolsanavidenaAux ;

//Parametros (tipo identificador)
listaDeRegalosAux ::= tsantaclaus PERSONA ;
listaDeRegalos ::= listaDeRegalosAux
    | listaDeRegalos BASTON listaDeRegalosAux ;

//Sentencia variables, funciones, asignaciones
adornoAux ::= llamadaASanta | infoTrineo | decorarGalleta | leerCarta | escribirCarta | decoracionI | decoracionesF
    |CORTA | ENVIA PERSONA | ENVIA tlsantaclaus ;

adorno ::= adornoAux FINREGALO | luces;

//Cuerpo (cuerpo con sentencia -sentencias o vacio)
villancicos ::= adorno | villancicos adorno ;

//Llamada de Funcion
llamadaASanta ::= PERSONA ABRECUENTO listaDeTamales CIERRACUENTO | PERSONA ABRECUENTO CIERRACUENTO ;

//Argumentos (tipo identificador)
listaDeTamalesAux ::= PERSONA | tlsantaclaus ;
listaDeTamales ::= listaDeTamalesAux
    |listaDeTamales BASTON listaDeTamalesAux ;

//Lista de int o char
listaAmigos ::= SantaArreglo|SantaArreglo BASTON listaAmigos ;

//Acceso al arreglo
acceso_trineo ::= PERSONA ABREEMPAQUE l_SANTA_CLAUS CIERRAEMPAQUE ;

//Asignar al arreglo
llenar_trineo ::= acceso_trineo ENTREGA SantaArreglo ;

colocar_trineo ::= PERSONA ENTREGA ABREEMPAQUE listaAmigos CIERRAEMPAQUE ; 

//Identificar arreglo

trineo ::= tsantaclaus PERSONA ABREEMPAQUE l_SANTA_CLAUS CIERRAEMPAQUE ;

infoTrineo ::= trineo | llenar_trineo | acceso_trineo | colocar_trineo | listaAmigos ;

//Asignar variable o arreglo
decorarGalleta ::= LOCAL listaDeRegalosAux 
                |LOCAL listaDeRegalosAux ENTREGA tlsantaclaus 
                |LOCAL listaDeRegalosAux ENTREGA whoVille
                |LOCAL listaDeRegalosAux ENTREGA gingerBread
                |LOCAL trineo ;

//Condicionales
ponerLuces ::= elif|else ;
//If
if ::= ELFO ABRECUENTO gingerBread CIERRACUENTO ABREREGALO villancicos CIERRAREGALO ponerLuces ;

//Elif
elif ::= HADA ABRECUENTO gingerBread CIERRACUENTO ABREREGALO villancicos CIERRAREGALO ponerLuces ;

//Else
else ::= DUENDE ABREREGALO villancicos CIERRAREGALO FINREGALO;

//Do Until
do_until ::= HACE ABREREGALO villancicos CIERRAREGALO REVISA ABRECUENTO gingerBread CIERRACUENTO FINREGALO;

//For
for ::= ENVUELVE ABRECUENTO decorarGalleta BASTON gingerBread BASTON decoracion CIERRACUENTO ABREREGALO villancicos CIERRAREGALO FINREGALO;

//Lectura
leerCarta ::= ESCUCHA ABRECUENTO PERSONA CIERRACUENTO ;

//Escritura
escribirCarta ::= NARRA ABRECUENTO mensaje CIERRACUENTO ;

//Unarias
decoracionesI ::= decoracionI | decoracion ;
decoracionesF ::= decoracionF | decoracion ;
decoracion ::= ornamentosUnicos PERSONA ;
decoracionIAux ::= ornamentosUnicos | TURENO ;
decoracionI ::= decoracionIAux l_SANTA_CLAUS ;
decoracionF::= TURENO l_PAPA_NOEL ;

//Operaciones aritmeticas
CindyLuWho ::= SantaMate | SantaMate ornamentos CindyLuWho | SantaMate ornamentos whoVille | whoVille ornamentos CindyLuWho ;          
DonnaWho ::= ABRECUENTO CindyLuWho CIERRACUENTO;
whoVille ::= DonnaWho | ABRECUENTO DonnaWho CIERRACUENTO;
            
//Operaciones logicas
sugar ::= SantaMate workshop SantaMate | whoVille workshop SantaMate | SantaMate workshop whoVille | whoVille workshop whoVille ;
candy ::= sugar | BALTAZAR sugar | PERSONA | BALTAZAR PERSONA | naughtyOrNice | BALTAZAR naughtyOrNice | llamadaASanta | BALTAZAR llamadaASanta | candyBox;
candyCane ::= candy | candy yellowSnow candyCane ;
candyBox ::= ABREREGALO candyCane CIERRAREGALO | BALTAZAR ABREREGALO candyCane CIERRAREGALO ;
gingerBread ::= candyBox | candyBox yellowSnow gingerBread ;


luces ::= 
    if|
    do_until|
    for;

tsantaclaus ::= 
    FATHER_CHRISTMAS|
    SANTA_CLAUS|
    PAPA_NOEL|
    SAN_NICOLAS|
    SANTA;

tlsantaclaus ::=
    l_SANTA_CLAUS|
    l_PAPA_NOEL|
    l_SANTA|
    l_TFATHER_CHRISTMAS|
    l_FFATHER_CHRISTMAS|
    l_SAN_NICOLAS;

SantaMate ::= l_SANTA_CLAUS|
    l_PAPA_NOEL|
    PERSONA|
    llamadaASanta;

SantaArreglo ::= 
    l_SANTA_CLAUS|
    l_SANTA;

mensaje ::= 
    l_SANTA_CLAUS|
    l_PAPA_NOEL|
    l_SAN_NICOLAS|
    PERSONA;

ornamentosUnicos ::=
    QUIEN|
    GRINCH;

ornamentos::=
    RODOLFO|
    TURENO|
    COMETA|
    DASHER|
    DANCER|
    PRANCER;

workshop::=
    SUGARPLUM|
    SNOWBALL|
    WUNORSE|
    BUSHY|
    PEPPER|
    SHINNY;

yellowSnow::= MELCHOR|
    GASPAR;

naughtyOrNice::= 
    l_FFATHER_CHRISTMAS|
    l_TFATHER_CHRISTMAS;