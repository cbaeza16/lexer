package com.p1;

import java_cup.runtime.*;
import java.lang.*;

//imports para manejo de tabla de simbolos
import java.util.HashMap;
import java.util.Map;
import java.util.ArrayList;


action code {:
    //Hasmap con nombre y lista de identificadores de la funcion
    HashMap<String, ArrayList<String>> listaTablasSimbolos = new HashMap<String, ArrayList<String>>();
    //Funcion actual
    String currentFunction;
    

    //Funcion para imprimir tabla de simbolos
    public void imprimirTablaSimbolos(){
        for (String name: listaTablasSimbolos.keySet()){
            System.out.println("Tabla de simbolo: " + name);
            System.out.println("Valores : ");
            for (String item : listaTablasSimbolos.get(name)){
                System.out.println(item);
            }
            System.out.println("");
        }
    }

:}

parser code {:
    Lexer lex;
    int cont = 0;
    String errorManager ="";

    @SuppressWarnings("deprecation")
    public parser(Lexer lex){
        this.lex=lex;
        this.symbolFactory = new DefaultSymbolFactory();
    }

    //Funcion para manejar errores sintacticos
    public void syntax_error(Symbol s){
        this.cont += 1;
        this.errorManager += "Error Sint치ctico: " + "\""+ s.value + "\"" + " Linea: "+(s.left+1)+" Columna: "+(s.right+1) + "\n";
    }
:}


init with {: :};
scan with {: return lex.next_token(); :};

//-----Simbolos terminales navide침os------

//Operadores aritmeticos bianrios
terminal RODOLFO, TURENO, COMETA, DASHER, DANCER, PRANCER;
//Operadores aritmeticos unarios
terminal QUIEN, GRINCH;
//Operadores relacionales
terminal SNOWBALL, BUSHY, PEPPER, SUGARPLUM, SHINNY, WUNORSE;
//Operadores logicos
terminal MELCHOR, GASPAR, BALTAZAR;
//Identificador
terminal PERSONA;
//Tipos
terminal FATHER_CHRISTMAS, SANTA_CLAUS, PAPA_NOEL, SAN_NICOLAS, SANTA;
//Literales
terminal l_FFATHER_CHRISTMAS, l_TFATHER_CHRISTMAS, l_SANTA_CLAUS, l_PAPA_NOEL, l_SAN_NICOLAS, l_SANTA;
//Parentesis
terminal ABRECUENTO, CIERRACUENTO, ABREEMPAQUE, CIERRAEMPAQUE, ABREREGALO, CIERRAREGALO;
//Palabras reservadas
terminal MAIN, LOCAL, FUNCTION;
//Estructuras de control
terminal ELFO, HADA, DUENDE, ENVUELVE, HACE, REVISA, ENVIA, CORTA, ENTREGA, BASTON; 
//Print, Read
terminal NARRA, ESCUCHA;
//Final de expresi칩n
terminal FINREGALO;


//-----Simbolos no terminales navide침os------

non terminal tsantaclaus, tlsantaclaus;
non terminal navidad, navidadAux, mainNavidad, mainNavidadAux, bolsanavidena, bolsaAux, bolsanavidenaAux, listaDeRegalos, listaDeRegalosAux,
listaDeTamalesAux, listaDeTamales, llamadaASanta, PersonaAux, listaAmigos, acceso_trineo, llenar_trineo, colocar_trineo, SantaArreglo, trineo, 
decorarGalleta, ayudanteDeGalleta, ponerLuces, if, elif, else, do_until, for, luces, leerCarta, escribirCarta, mensaje, ornamentosUnicos, 
decoracionesF, decoracion, decoracionIAux, decoracionI, decoracionF, decoracionesNav, CindyLuWho, whoVille, SantaMate, workshop, yellowSnow,
sugar, candy, candyCane, candyBox, gingerBread, adornoAux, naughtyOrNice, CindyLuWhoS, CindyLuWhoT, SantaMateAux, workshopAux, yellowSnowAux,
rodolfoAux, turenoAux, cometaAux, dasherAux, dancerAux, prancerAux, adorno, villancicos, infoTrineo;

//-----Precedencias------
precedence left RODOLFO, TURENO;
precedence left COMETA, DASHER, DANCER;
precedence left PRANCER;

start with navidad;

//Programa Simbolo inicial = navidad
navidad ::= {:
        System.out.println("-------Inicio Fase Sintactica-------");
        System.out.println(" ");
    :}
    navidadAux 
    {:
        System.out.println("****** Cargando Tabla de Simbolos ******");
        System.out.println(" ");
        imprimirTablaSimbolos();
        System.out.println("-------Fin Fase Sintactica-------");
        System.out.println(" ");
        if(cont == 0) System.out.println("[Done] El archivo puede ser leido con exito");
        else System.out.println("[Warning] El archivo presenta " + String.valueOf(cont) + " errores sintacticos");
        System.out.println(errorManager);
        System.out.println(" ");
    :} ;

navidadAux ::= mainNavidad|
        bolsanavidena mainNavidad|error navidadAux ; 

//Funcion Main
mainNavidadAux ::= FUNCTION MAIN ABRECUENTO CIERRACUENTO 
            {:
                System.out.println("Inicio de funcion Main");
                String tipoTabla = "Tipo:main";
                ArrayList<String> funcionMain = new ArrayList<String>();
                currentFunction = "main";
                funcionMain.add(tipoTabla);
                listaTablasSimbolos.put(currentFunction, funcionMain);
            :};

mainNavidad ::= mainNavidadAux ABREREGALO villancicos CIERRAREGALO ;


bolsaAux ::= FUNCTION tsantaclaus:tsc  PERSONA:per
            {:
                System.out.println("Inicio de funcion " + per.toString());
                String tipoTabla = "";
                tipoTabla = "Tipo:function - "+"Retorna:"+tsc.toString();
                ArrayList<String> funcionMain = new ArrayList<String>();
                currentFunction = per.toString();
                funcionMain.add(tipoTabla);
                listaTablasSimbolos.put(currentFunction, funcionMain);
            :};

//Creacion de funciones con palabra resevada "function" tipo identificador (parametros) {cuerpo}
bolsanavidenaAux ::= bolsaAux ABRECUENTO CIERRACUENTO ABREREGALO villancicos CIERRAREGALO
    | bolsaAux ABRECUENTO listaDeRegalos CIERRACUENTO ABREREGALO villancicos CIERRAREGALO;

//Creacion de una o varias funciones
bolsanavidena ::= bolsanavidenaAux | bolsanavidena bolsanavidenaAux ;

//Parametros (tipo identificador)
listaDeRegalosAux ::= tsantaclaus: tsan PERSONA: per 
            {:
                listaTablasSimbolos.get(currentFunction).add("Tipo:Param - "+ "ID:" +per.toString()+":"+tsan.toString());
            :};

listaDeRegalos ::= listaDeRegalosAux
    | listaDeRegalos BASTON listaDeRegalosAux ;

//Sentencia variables, funciones, asignaciones
adornoAux ::= llamadaASanta | infoTrineo | decorarGalleta | leerCarta | escribirCarta | decoracionesNav
    |CORTA | ENVIA PERSONA | ENVIA tlsantaclaus;

adorno ::= adornoAux FINREGALO | luces;

//Cuerpo (cuerpo con sentencia -sentencias o vacio)
villancicos ::= adorno | villancicos adorno ;

//Llamada de Funcion
PersonaAux ::= PERSONA:p {: System.out.println(p);:};
llamadaASanta ::= PersonaAux ABRECUENTO listaDeTamales CIERRACUENTO 
            | PersonaAux ABRECUENTO CIERRACUENTO ;

//Argumentos (tipo identificador)
listaDeTamalesAux ::= PERSONA | tlsantaclaus ;
listaDeTamales ::= listaDeTamalesAux
    |listaDeTamales BASTON listaDeTamalesAux ;

//Lista de int o char
listaAmigos ::= SantaArreglo|SantaArreglo BASTON listaAmigos ;

//Acceso al arreglo
acceso_trineo ::= PERSONA ABREEMPAQUE l_SANTA_CLAUS CIERRAEMPAQUE ;

//Asignar al arreglo
llenar_trineo ::= acceso_trineo ENTREGA SantaArreglo ;

colocar_trineo ::= PERSONA ENTREGA ABREEMPAQUE listaAmigos CIERRAEMPAQUE ; 

//Identificar arreglo

trineo ::= LOCAL tsantaclaus:tsan PERSONA:per ABREEMPAQUE l_SANTA_CLAUS CIERRAEMPAQUE 
            {:
                listaTablasSimbolos.get(currentFunction).add("Tipo:LocalArray - "+ "ID:" +per.toString()+":"+tsan.toString());
            :};

infoTrineo ::= trineo | llenar_trineo | acceso_trineo | colocar_trineo ;

//Asignar variable o arreglo

ayudanteDeGalleta ::= LOCAL tsantaclaus:tsan PERSONA:per 
            {:
                listaTablasSimbolos.get(currentFunction).add("Tipo:Local - "+ "ID:" +per.toString()+":"+tsan.toString());
            :};

decorarGalleta ::= ayudanteDeGalleta 
                |ayudanteDeGalleta ENTREGA tlsantaclaus:tls {: System.out.println(tls);:}
                |ayudanteDeGalleta ENTREGA whoVille
                |ayudanteDeGalleta ENTREGA gingerBread ;

//Condicionales
ponerLuces ::= elif|else ;
//If
if ::= ELFO ABRECUENTO gingerBread CIERRACUENTO ABREREGALO villancicos CIERRAREGALO ponerLuces ;

//Elif
elif ::= HADA ABRECUENTO gingerBread CIERRACUENTO ABREREGALO villancicos CIERRAREGALO ponerLuces ;

//Else
else ::= DUENDE ABREREGALO villancicos CIERRAREGALO FINREGALO;

//Do Until
do_until ::= HACE ABREREGALO villancicos CIERRAREGALO REVISA ABRECUENTO gingerBread CIERRACUENTO FINREGALO;

//For
for ::= ENVUELVE ABRECUENTO decorarGalleta BASTON gingerBread BASTON decoracion CIERRACUENTO ABREREGALO villancicos CIERRAREGALO FINREGALO;

//Lectura
leerCarta ::= ESCUCHA ABRECUENTO PERSONA CIERRACUENTO ;

//Escritura
escribirCarta ::= NARRA ABRECUENTO mensaje CIERRACUENTO ;

//Operaciones Unarias
decoracionesNav ::= decoracionesF | decoracionI;
decoracionesF ::= decoracionF | decoracion ;
decoracion ::= ornamentosUnicos:om PERSONA:p {:System.out.println(om); System.out.println(p);:};
decoracionIAux ::= ornamentosUnicos:om {:System.out.println(om);:} | TURENO:tr {:System.out.println(tr);:} ;
decoracionI ::= decoracionIAux l_SANTA_CLAUS:ls {:System.out.println(ls);:} ;
decoracionF::= TURENO:tr l_PAPA_NOEL:lp {:System.out.println(tr); System.out.println(lp);:} ;

//Operaciones aritmeticas

rodolfoAux ::= RODOLFO:rd {: System.out.println(rd);:};
turenoAux ::= TURENO:tr {: System.out.println(tr);:};
cometaAux ::= COMETA:cm {: System.out.println(cm);:};
dasherAux ::= DASHER:ds {: System.out.println(ds);:};
dancerAux ::= DANCER:dc {: System.out.println(dc);:};
prancerAux ::= PRANCER:pr {: System.out.println(pr);:};

CindyLuWho ::= CindyLuWho rodolfoAux CindyLuWho 
            | CindyLuWhoS rodolfoAux CindyLuWhoS
            | whoVille rodolfoAux CindyLuWho
            | CindyLuWhoS
            | CindyLuWho turenoAux CindyLuWho 
            | CindyLuWhoS turenoAux CindyLuWhoS
            | whoVille turenoAux CindyLuWho;
CindyLuWhoS ::= CindyLuWhoS cometaAux CindyLuWhoS 
            |CindyLuWhoS dasherAux CindyLuWhoS
            | CindyLuWhoS dancerAux CindyLuWhoS
            | CindyLuWhoT ;
CindyLuWhoT ::=  CindyLuWhoT prancerAux CindyLuWhoT
            | SantaMateAux 
            | whoVille;

whoVille ::= ABRECUENTO:ac {: System.out.println(ac);:} CindyLuWho CIERRACUENTO:cc {: System.out.println(cc);:};

//Auxiliares con impresion
SantaMateAux ::= SantaMate:sm {: System.out.println(sm);:};
workshopAux ::= workshop:wk {: System.out.println(wk);:};
yellowSnowAux ::= yellowSnow:ys {: System.out.println(ys);:};

//Operaciones Relacionales
sugar ::= SantaMateAux workshopAux SantaMateAux 
        | whoVille workshopAux SantaMateAux 
        | SantaMateAux workshopAux whoVille 
        | whoVille workshopAux whoVille ;

//Operaciones Logicas       
candy ::= sugar 
        | BALTAZAR:bz sugar {: System.out.println(bz);:}
        | PERSONA:p {: System.out.println(p);:}
        | BALTAZAR:bz PERSONA:p {: System.out.println(bz); System.out.println(p);:}
        | naughtyOrNice:nn {: System.out.println(nn);:}
        | BALTAZAR:bz naughtyOrNice:nn {: System.out.println(bz); System.out.println(nn);:}
        | llamadaASanta 
        | BALTAZAR:bz llamadaASanta {: System.out.println(bz);:}
        | candyBox;

candyCane ::= candy 
        | candy yellowSnowAux candyCane ;

candyBox ::= ABREREGALO:ar {: System.out.println(ar);:} candyCane CIERRAREGALO:cr {: System.out.println(cr);:}
        | BALTAZAR:bz ABREREGALO:ar candyCane CIERRAREGALO:cr {: System.out.println(bz);  System.out.println(ar);  System.out.println(cr);:} ;

//Operaciones logicas
gingerBread ::= candyBox 
        | candyBox yellowSnowAux gingerBread ;

luces ::= 
    if|
    do_until|
    for;

tsantaclaus ::= 
    FATHER_CHRISTMAS:tsc {:RESULT = tsc;:}|
    SANTA_CLAUS:tsc {:RESULT = tsc;:}|
    PAPA_NOEL:tsc {:RESULT = tsc;:}|
    SAN_NICOLAS:tsc {:RESULT = tsc;:}|
    SANTA:tsc {:RESULT = tsc;:};

tlsantaclaus ::=
    l_SANTA_CLAUS:tls {:RESULT = tls;:}|
    l_PAPA_NOEL:tls {:RESULT = tls;:}|
    l_SANTA:tls {:RESULT = tls;:}|
    l_TFATHER_CHRISTMAS:tls {:RESULT = tls;:}|
    l_FFATHER_CHRISTMAS:tls {:RESULT = tls;:}|
    l_SAN_NICOLAS:tls {:RESULT = tls;:};

SantaMate ::= l_SANTA_CLAUS:lst {:RESULT = lst;:}|
    l_PAPA_NOEL:lst {:RESULT = lst;:}|
    PERSONA:lst {:RESULT = lst;:}|
    decoracionesNav|
    llamadaASanta;

SantaArreglo ::= 
    l_SANTA_CLAUS|
    l_SANTA;

mensaje ::= 
    l_SANTA_CLAUS|
    l_PAPA_NOEL|
    l_SAN_NICOLAS|
    PERSONA;

ornamentosUnicos ::=
    QUIEN:om {:RESULT = om;:}|
    GRINCH:om {:RESULT = om;:};

workshop::=
    SUGARPLUM:w {:RESULT = w;:}|
    SNOWBALL:w {:RESULT = w;:}|
    WUNORSE:w {:RESULT = w;:}|
    BUSHY:w {:RESULT = w;:}|
    PEPPER:w {:RESULT = w;:}|
    SHINNY:w {:RESULT = w;:};

yellowSnow::= MELCHOR:ys {:RESULT = ys;:}|
    GASPAR:ys {:RESULT = ys;:};

naughtyOrNice::= 
    l_FFATHER_CHRISTMAS:lf {:RESULT = lf;:}|
    l_TFATHER_CHRISTMAS:lt {:RESULT = lt;:};